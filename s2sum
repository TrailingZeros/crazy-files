#!/usr/bin/env groovy
@GrabResolver(name = 'jitpack', root = 'https://jitpack.io')
@GrabResolver(name = 'central', root = 'http://central.maven.org/maven2/')
@Grab('com.github.nao20010128nao:CryptorageExtras:128a3b8')
@Grab('com.github.nao20010128nao:HttpServerJava:4582a9d30f')
import com.nao20010128nao.Cryptorage.ExposedKt as UtilsKt
import com.nao20010128nao.CryptorageExtras.UtilsKt as Extras
import com.nao20010128nao.CryptorageExtras.indexer.IndexedKt
import java.util.concurrent.Executors
import java.security.MessageDigest
import java.util.concurrent.TimeUnit

def algo="sha-256"

def pass = System.env.PASSWORD
def master=System.env.VIDEOS_PREFIX?:"master"
def endpoint=System.env.ENDPOINT

def regexes=args.toList().collect{~it}

def dir=UtilsKt.asFileSource(
  new URL("$endpoint/indexed/raw/$master")
)
def base=IndexedKt.withV1IndexedEncryption(dir,pass,false)

def dls=base.list().toList().findAll{
  regexes.any{rg->rg.matcher(it).matches()} || args.any{aa->it.contains(aa)}
}

def exec = Executors.newFixedThreadPool(3)

dls.each{n->
  exec.execute{
    def buf=new byte[8192]
    def src=base.open(n).openStream()
    def md=MessageDigest.getInstance(algo)
    while(true){
      int r=src.read(buf)
      if(r<=0)break
      md.update(buf,0,r)
    }
    def digest=md.digest().collect{String.format('%02x',it)}.join('')
    println "$digest $n"
  }
}

exec.shutdown()
exec.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS)
